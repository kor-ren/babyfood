package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.48

import (
	"context"

	"github.com/kor-ren/babyfood/data"
	"github.com/kor-ren/babyfood/graph/model"
)

// CreateMeal is the resolver for the createMeal field.
func (r *mutationResolver) CreateMeal(ctx context.Context, input model.NewMeal) (*model.Meal, error) {
	return data.For(ctx).CreateMeal(input)
}

// UpdateMeal is the resolver for the updateMeal field.
func (r *mutationResolver) UpdateMeal(ctx context.Context, input model.UpdateMeal) (*model.Meal, error) {
	return data.For(ctx).UpdateMeal(input)
}

// Meals is the resolver for the meals field.
func (r *queryResolver) Meals(ctx context.Context) ([]*model.Meal, error) {
	return data.For(ctx).GetMeals()
}

// Meal is the resolver for the meal field.
func (r *queryResolver) Meal(ctx context.Context, id string) (*model.Meal, error) {
	return data.For(ctx).GetMealById(id)
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
